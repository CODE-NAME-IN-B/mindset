-- إنشاء المستندات التقنية مباشرة كملاحظات
DO $$
DECLARE
  admin_user_id UUID;
BEGIN
  -- الحصول على معرف المستخدم الحالي
  SELECT auth.uid() INTO admin_user_id;
  
  IF admin_user_id IS NULL THEN
    RAISE EXCEPTION 'يجب تسجيل الدخول أولاً لإنشاء المستندات التقنية';
  END IF;
  
  -- إنشاء المواصفات التقنية
  INSERT INTO notes (
    title, 
    content, 
    user_id, 
    created_at, 
    updated_at
  )
  VALUES (
    'المواصفات التقنية',
    '# المواصفات التقنية لتطبيق مايندست (Mindset)

## نظرة عامة
تطبيق مايندست هو تطبيق ويب للملاحظات وتنظيم الأفكار، يسمح للمستخدمين بإنشاء وتحرير وتنظيم الملاحظات مع مجموعة غنية من الميزات مثل دعم Markdown، التنظيم في مجلدات، العلامات، والروابط بين الملاحظات.

## المتطلبات الفنية

### الواجهة الأمامية (Frontend)
- **إطار العمل**: React 18+
- **لغة البرمجة**: TypeScript 5.0+
- **إدارة الحالة**: React Context API
- **التنسيق**: TailwindCSS 3.3+
- **واجهة المستخدم**: مكونات مخصصة مع تصميم متجاوب
- **محرر النصوص**: دعم Markdown باستخدام @uiw/react-md-editor
- **مكتبات إضافية**:
  - react-hot-toast لإشعارات النظام
  - lucide-react للرموز والأيقونات
  - rehype-sanitize لتطهير HTML

### الواجهة الخلفية (Backend)
- **خدمات البيانات**: Supabase
  - قاعدة بيانات PostgreSQL
  - مصادقة وتفويض باستخدام السياسات
  - تخزين الملفات للصور والمرفقات
  - APIs REST تلقائية
- **القواعد**: Row Level Security (RLS)

### بنية البيانات
- **الجداول الرئيسية**:
  - `profiles`: معلومات المستخدم
  - `notes`: الملاحظات
  - `folders`: مجلدات لتنظيم الملاحظات
  - `attachments`: مرفقات الملاحظات
- **العلاقات**:
  - كل مستخدم لديه ملف شخصي واحد
  - كل مستخدم يمكن أن يملك العديد من الملاحظات والمجلدات
  - كل ملاحظة يمكن أن تنتمي إلى مجلد واحد
  - كل ملاحظة يمكن أن تحتوي على عدة مرفقات',
    admin_user_id,
    NOW(),
    NOW()
  )
  ON CONFLICT DO NOTHING;
  
  -- إنشاء مخطط البنية
  INSERT INTO notes (
    title, 
    content, 
    user_id, 
    created_at, 
    updated_at
  )
  VALUES (
    'مخطط البنية',
    '# مخطط البنية لتطبيق مايندست (Mindset)

## نظرة عامة على البنية

تطبيق مايندست مبني باستخدام هيكلية تطبيق الصفحة الواحدة (SPA) ويعتمد على React للواجهة الأمامية وSupabase للواجهة الخلفية. يتبع نمط تصميم قائم على المكونات مع فصل واضح للمسؤوليات.

## طبقات التطبيق

### 1. طبقة العرض (UI Layer)
تتكون من مكونات React المسؤولة عن عرض واجهة المستخدم وتفاعلاته:

- **مكونات الصفحات**: Layout, Auth, NotesList, NoteEditor
- **مكونات المشتركة**: Sidebar, UserProfile, ProfileSettings
- **مكونات مخصصة**: MDEditor, FileUploader, TagSelector

### 2. طبقة إدارة الحالة (State Management Layer)
تستخدم React Context API لإدارة حالة التطبيق:

- **LanguageContext**: إدارة تعدد اللغات والترجمة
- **ThemeContext**: إدارة الوضع المظلم/الفاتح
- **AuthContext**: إدارة حالة تسجيل الدخول والمستخدم الحالي

### 3. طبقة الخدمات (Service Layer)
تتعامل مع API الخارجية وعمليات البيانات:

- **supabase.ts**: تهيئة العميل واتصالات قاعدة البيانات
- **profileService**: إدارة ملفات تعريف المستخدمين
- **notesService**: إدارة الملاحظات والملفات المرفقة',
    admin_user_id,
    NOW(),
    NOW()
  )
  ON CONFLICT DO NOTHING;
  
  -- إنشاء نموذج الأمان
  INSERT INTO notes (
    title, 
    content, 
    user_id, 
    created_at, 
    updated_at
  )
  VALUES (
    'نموذج الأمان',
    '# نموذج الأمان لتطبيق مايندست (Mindset)

## نظرة عامة على الأمان

يتبع تطبيق مايندست نموذج أمان شامل يغطي جوانب متعددة من حماية البيانات والخصوصية، مبني على مبادئ الأمان بالتصميم. يستفيد التطبيق من قدرات الأمان المتقدمة التي توفرها منصة Supabase مع تعزيزات إضافية على مستوى التطبيق.

## المصادقة والتفويض

### نظام المصادقة
- **مصادقة قائمة على البريد الإلكتروني وكلمة المرور**
- **إدارة جلسة JWT**:
  - توقيع وتشفير الرموز
  - مدة صلاحية محدودة (24 ساعة)
  - تجديد تلقائي للجلسات النشطة
- **إدارة كلمات المرور**:
  - تجزئة باستخدام bcrypt مع salt عشوائي
  - التحقق من قوة كلمة المرور
  - حماية ضد محاولات تسجيل الدخول المتكررة

### نظام التفويض
- **أمان مستوى الصف (RLS)** لقيود الوصول إلى البيانات
- **سياسات الجداول** تعتمد على هوية المستخدم المصادق عليه
- **عزل البيانات** بين المستخدمين:
  - المستخدمون يرون فقط الملاحظات والمجلدات والمرفقات الخاصة بهم
  - لا يمكن للمستخدمين الوصول إلى بيانات المستخدمين الآخرين',
    admin_user_id,
    NOW(),
    NOW()
  )
  ON CONFLICT DO NOTHING;
  
  RAISE NOTICE 'تم إنشاء الملفات التقنية بنجاح كملاحظات للمستخدم الحالي';
END $$; 